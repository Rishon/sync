plugins {
    id 'java'
    id("io.papermc.paperweight.userdev") version "1.6.0"
    id 'org.jetbrains.kotlin.jvm'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'dev.rishon'
version = '1.0'

repositories {
    mavenCentral()
    gradlePluginPortal()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.6-R0.1-SNAPSHOT"

    paperweight.paperDevBundle("1.20.6-R0.1-SNAPSHOT")

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'redis.clients:jedis:5.1.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'
    implementation 'com.zaxxer:HikariCP:5.1.0'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks.shadowJar {
    // TODO: Remove this when the plugin is ready for production
    destinationDirectory = file("C:\\Users\\i9\\Downloads\\server\\server1\\plugins")
    // Copy the jar to another directory
    doLast {
        copy {
            from archiveFile
            into file("C:\\Users\\i9\\Downloads\\server\\server2\\plugins")
        }
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
kotlin {
    jvmToolchain(21)
}
